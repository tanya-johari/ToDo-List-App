{"version":3,"sources":["components/Header.js","components/ToDoItem.js","components/ToDoList.js","App.js","index.js"],"names":["Header","_jsx","className","children","ToDoItem","_ref","text","completed","onToggleCompleted","concat","onClick","handleToggleCompleted","style","cursor","oldtodos","ToDoList","todos","setTodos","useState","newTask","setNewTask","toggleCompleted","prevTodos","map","todo","_jsxs","type","placeholder","value","onChange","e","target","addTodo","trim","length","some","removeCompletedTodos","filter","emptyList","App","TodoList","rootElement","document","getElementById","createRoot","render"],"mappings":"gKAAe,SAASA,IACpB,OACEC,cAAA,UAAQC,UAAU,SAAQC,SACxBF,cAAA,MAAAE,SAAI,2BAGV,CCJa,SAASC,EAAQC,GAA0C,IAAzC,KAAEC,EAAI,UAAEC,EAAS,kBAAEC,GAAmBH,EAKrE,OACEJ,cAAA,MACEC,UAAS,aAAAO,OAAeF,EAAY,YAAc,IAClDG,QAP0BC,KAC5BH,EAAkBF,EAAK,EAOrBM,MAAO,CAAEC,OAAQN,EAAY,UAAY,WAAYJ,SAEpDG,GAGP,CCZA,MAAMQ,EAAW,CACT,CAAER,KAAM,kBAAmBC,WAAW,GACtC,CAAED,KAAM,uBAAwBC,WAAW,GAC3C,CAAED,KAAM,oBAAqBC,WAAW,GACxC,CAAED,KAAM,oBAAqBC,WAAW,GACxC,CAAED,KAAM,gBAAiBC,WAAW,IAG7B,SAASQ,IACtB,MAAOC,EAAOC,GAAYC,mBAASJ,IAC5BK,EAASC,GAAcF,mBAAS,IASjCG,EAAmBf,IACvBW,GAAUK,GACRA,EAAUC,KAAKC,GACbA,EAAKlB,OAASA,EAAO,IAAKkB,EAAMjB,WAAYiB,EAAKjB,WAAciB,KAElE,EAWH,OACEC,eAAA,OAAKvB,UAAU,sBAAqBC,SAAA,CAClCF,cAACD,EAAM,IACPyB,eAAA,OAAKvB,UAAU,uBAAsBC,SAAA,CACnCF,cAAA,SACEyB,KAAK,OACLC,YAAY,iBACZC,MAAOT,EACPU,SAAWC,GAAMV,EAAWU,EAAEC,OAAOH,SAEvC3B,cAAA,UAAQC,UAAU,UAAUwB,KAAK,SAAShB,QAjChCsB,KACVb,EAAQc,SACVhB,GAAUK,GAAc,IAAIA,EAAW,CAAEhB,KAAMa,EAASZ,WAAW,MACnEa,EAAW,IACb,EA6B+DjB,SAAC,gBAI9DF,cAAA,MAAIC,UAAU,YAAWC,SACL,IAAjBa,EAAMkB,OACLjC,cAAA,MAAIC,UAAU,gBAAeC,SAC3BF,cAAA,KAAAE,SAAG,8CAGLa,EAAMO,KAAKC,GACTvB,cAACG,EAAQ,CAEPE,KAAMkB,EAAKlB,KACXC,UAAWiB,EAAKjB,UAChBC,kBAAmBa,GAHdG,EAAKlB,UAQjBU,EAAMkB,OAAS,GACdT,eAAA,OAAKvB,UAAU,gBAAeC,SAAA,CAC3Ba,EAAMmB,MAAMX,GAASA,EAAKjB,aACzBN,cAAA,UAAQC,UAAU,aAAawB,KAAK,SAAShB,QAzC1B0B,KAC3BnB,GAAUK,GAAcA,EAAUe,QAAQb,IAAUA,EAAKjB,aAAW,EAwCeJ,SAAC,qBAI9EF,cAAA,UAAQC,UAAU,YAAYwB,KAAK,SAAShB,QAzClC4B,KAChBrB,EAAS,GAAG,EAwCyDd,SAAC,eAO1E,C,MC7EeoC,MAHf,WACE,OAAOtC,cAACuC,EAAQ,GAClB,ECFA,MAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OAAO5C,cAACsC,EAAG,I","file":"static/js/main.5efe24d3.chunk.js","sourcesContent":["export default function Header() {\r\n    return (\r\n      <header className=\"Header\">\r\n        <h1>To-Do appüìù</h1>\r\n      </header>\r\n    );\r\n  }\r\n  ","import React from 'react';\r\n\r\nexport default function ToDoItem({ text, completed, onToggleCompleted }) {\r\n  const handleToggleCompleted = () => {\r\n    onToggleCompleted(text);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      className={`todo-item ${completed ? 'completed' : ''}`}\r\n      onClick={handleToggleCompleted}\r\n      style={{ cursor: completed ? 'default' : 'pointer' }}\r\n    >\r\n      {text}\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Header from './Header';\r\nimport ToDoItem from './ToDoItem';\r\n\r\nconst oldtodos = [\r\n        { text: \"Read SpringBoot\", completed: false },\r\n        { text: \"Complete assignments\", completed: false },\r\n        { text: \"Prepare breakfast\", completed: false },\r\n        { text: \"Sleep for 2 hours\", completed: false },\r\n        { text: \"Take a shower\", completed: false }\r\n]\r\n\r\nexport default function ToDoList() {\r\n  const [todos, setTodos] = useState(oldtodos);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const addTodo = () => {\r\n    if (newTask.trim()) {\r\n      setTodos((prevTodos) => [...prevTodos, { text: newTask, completed: false }]);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const toggleCompleted = (text) => {\r\n    setTodos((prevTodos) =>\r\n      prevTodos.map((todo) =>\r\n        todo.text === text ? { ...todo, completed: !todo.completed } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  const removeCompletedTodos = () => {\r\n    setTodos((prevTodos) => prevTodos.filter((todo) => !todo.completed));\r\n  };\r\n\r\n  const emptyList = () => {\r\n    setTodos([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-list-container\">\r\n      <Header />\r\n      <div className=\"todo-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a new task\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button className=\"btn-add\" type=\"button\" onClick={addTodo}>\r\n          Add Task\r\n        </button>\r\n      </div>\r\n      <ul className=\"todo-list\">\r\n        {todos.length === 0 ? (\r\n          <li className=\"empty-message\">\r\n            <i>Nothing to do buddy. Sleep!üò¥</i>\r\n          </li>\r\n        ) : (\r\n          todos.map((todo) => (\r\n            <ToDoItem\r\n              key={todo.text}\r\n              text={todo.text}\r\n              completed={todo.completed}\r\n              onToggleCompleted={toggleCompleted}\r\n            />\r\n          ))\r\n        )}\r\n      </ul>\r\n      {todos.length > 0 && (\r\n        <div className=\"btn-container\">\r\n          {todos.some((todo) => todo.completed) && (\r\n            <button className=\"btn-remove\" type=\"button\" onClick={removeCompletedTodos}>\r\n              Remove Completed\r\n            </button>\r\n          )}\r\n          <button className=\"btn-empty\" type=\"button\" onClick={emptyList}>\r\n            Empty\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import TodoList from \"./components/ToDoList\";\nimport \"./styles.css\";\n\nfunction App() {\n  return <TodoList />\n}\nexport default App;","import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(<App />);\n"],"sourceRoot":""}