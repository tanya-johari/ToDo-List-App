{"version":3,"sources":["components/Header.js","components/ToDoItem.js","components/ToDoList.js","App.js","index.js"],"names":["Header","_jsx","className","children","ToDoItem","_ref","text","completed","onToggleCompleted","concat","onClick","handleToggleCompleted","style","cursor","textDecoration","oldtodos","ToDoList","todos","setTodos","useState","newTask","setNewTask","toggleCompleted","prevTodos","map","todo","useEffect","loadFromLocalStorage","storedData","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","_jsxs","type","placeholder","value","onChange","e","target","addTodo","trim","length","some","removeCompletedTodos","filter","emptyList","App","TodoList","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.4917cd8b.chunk.js","sourcesContent":["export default function Header() {\r\n    return (\r\n      <header className=\"Header\">\r\n        <h1>To-Do appüìù</h1>\r\n      </header>\r\n    );\r\n  }\r\n  ","import React from 'react';\r\n\r\nexport default function ToDoItem({ text, completed, onToggleCompleted }) {\r\n  const handleToggleCompleted = () => {\r\n    onToggleCompleted(text);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      className={`todo-item ${completed ? 'completed' : ''}`}\r\n      onClick={handleToggleCompleted}\r\n      data-testid=\"todo-item-checkbox\"\r\n      style={{ cursor: completed ? 'default' : 'pointer', textDecoration: completed ? 'line-through' : 'none' }}\r\n    >\r\n      {text}\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport ToDoItem from './ToDoItem';\r\n\r\nconst oldtodos = [\r\n  { text: \"Read SpringBoot\", completed: false },\r\n  { text: \"Complete assignments\", completed: false },\r\n  { text: \"Prepare breakfast\", completed: false },\r\n  { text: \"Sleep for 2 hours\", completed: false },\r\n  { text: \"Take a shower\", completed: false }\r\n];\r\n\r\nexport default function ToDoList() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const saveToLocalStorage = (todos, newTask) => {\r\n    localStorage.setItem('todos', JSON.stringify({ todos, newTask }));\r\n  };\r\n\r\n  const loadFromLocalStorage = () => {\r\n    const storedData = localStorage.getItem('todos');\r\n    if (!storedData) return { todos: oldtodos, newTask: '' };\r\n\r\n    const { todos, newTask } = JSON.parse(storedData);\r\n    return { todos: todos || oldtodos, newTask: newTask || '' };\r\n  };\r\n\r\n  const addTodo = () => {\r\n    if (newTask.trim()) {\r\n      setTodos((prevTodos) => [...prevTodos, { text: newTask, completed: false }]);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const toggleCompleted = (text) => {\r\n    setTodos((prevTodos) =>\r\n      prevTodos.map((todo) =>\r\n        todo.text === text ? { ...todo, completed: !todo.completed } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  const removeCompletedTodos = () => {\r\n    setTodos((prevTodos) => prevTodos.filter((todo) => !todo.completed));\r\n  };\r\n\r\n  const emptyList = () => {\r\n    setTodos([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { todos, newTask } = loadFromLocalStorage();\r\n    setTodos(todos);\r\n    setNewTask(newTask);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage(todos, newTask);\r\n  }, [todos, newTask]);\r\n\r\n  return (\r\n    <div className=\"todo-list-container\">\r\n      <Header />\r\n      <div className=\"todo-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a new task\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n          data-testid=\"todo-input\"\r\n        />\r\n        <button className=\"btn-add\" type=\"button\" onClick={addTodo}>\r\n          Add Task\r\n        </button>\r\n      </div>\r\n      <ul className=\"todo-list\">\r\n        {todos.length === 0 ? (\r\n          <li className=\"empty-message\">\r\n            <i>Nothing to do buddy. Sleep!üò¥</i>\r\n          </li>\r\n        ) : (\r\n          todos.map((todo) => (\r\n            <ToDoItem\r\n              key={todo.text}\r\n              text={todo.text}\r\n              completed={todo.completed}\r\n              onToggleCompleted={toggleCompleted}\r\n            />\r\n          ))\r\n        )}\r\n      </ul>\r\n      {todos.length > 0 && (\r\n        <div className=\"btn-container\">\r\n          {todos.some((todo) => todo.completed) && (\r\n            <button className=\"btn-remove\" type=\"button\" onClick={removeCompletedTodos}>\r\n              Remove Completed\r\n            </button>\r\n          )}\r\n          <button className=\"btn-empty\" type=\"button\" onClick={emptyList}>\r\n            Empty\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import TodoList from \"./components/ToDoList\";\nimport \"./styles.css\";\n\nfunction App() {\n  return <TodoList />\n}\nexport default App;","import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(<App />);\n"],"sourceRoot":""}